definitions:
  entity.BorrowBookRequest:
    properties:
      book_id:
        type: string
      borrow_date:
        type: string
    type: object
  entity.InsertBookRequest:
    properties:
      author:
        type: string
      published_date:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  entity.ResponseError:
    properties:
      message:
        type: string
    type: object
  entity.ResponseOK:
    properties:
      data: {}
      message:
        type: string
    type: object
  entity.ReturnBookRequest:
    properties:
      book_id:
        type: string
      return_date:
        type: string
    type: object
  entity.UpdateBookRequest:
    properties:
      author:
        type: string
      id:
        type: string
      published_date:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  entity.UpdateUserPayload:
    properties:
      password:
        type: string
    type: object
  entity.UserInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  title: Book Library API
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get all books
      operationId: get-all-books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Insert a new book
      operationId: insert-book
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entity.InsertBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      summary: Insert a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book
      operationId: delete-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get book by ID
      operationId: get-book-by-id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      summary: Get book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update a book
      operationId: update-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      summary: Update a book
      tags:
      - books
  /books/{id}/borrow:
    post:
      consumes:
      - application/json
      description: Borrow a book
      operationId: borrow-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Borrow data
        in: body
        name: borrow_date
        required: true
        schema:
          $ref: '#/definitions/entity.BorrowBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Borrow a book
      tags:
      - books
  /books/{id}/return:
    post:
      consumes:
      - application/json
      description: Return a book
      operationId: return-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Return data
        in: body
        name: return_date
        required: true
        schema:
          $ref: '#/definitions/entity.ReturnBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Return a book
      tags:
      - books
  /users:
    post:
      consumes:
      - application/json
      description: Register a new user
      operationId: register-user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      summary: Register a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by ID
      operationId: get-user-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login user
      operationId: login-user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResponseError'
      summary: Login user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
